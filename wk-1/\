"""
Homework 1 for Professor Hockings CS499-599 Deep Learning course
Author: Akiel Aries

Details:

"""
# lib for retrieving src file from web
import urllib.request
# lib for reading files on OS
import os
# lib used for copying src file info into destination
import shutil

import pandas as pd
import plotnine as p9
import numpy as np

# our src file we want to download
src_url = 'https://github.com/tdhock/cs570-spring-2022/raw/master/data/zip.test.gz'
src_file = 'zip.test.gz'
dest_file = os.path.abspath("")

# method for downloading our source file if DNE on filesystem
def main():
    # reading file system for existing src file

    """
    backbone code from the python.org lib docs to  
        - check if a file exists in the current directory
        - retrieve a file given the url
    """
    if not os.path.isfile(src_file):
        urllib.request.urlretrieve(src_url, src_file)
        print("Downloading src file...")
        #return True

    else:
        print("File already exists in this folder...continuing anyway\n")
        #return False
        
    # read in downloaded src file as a pandas dataframe 
    zip_df = pd.read_csv(src_file, header=None, sep=" ")

    """
    convert dataframe to numpy array exlcuding the first column; iloc for row
    and col specifying. 
    """
    zip_arr = zip_df.iloc[:,1:].to_numpy()
    #zip_arr.shape 
    # printing shape of array
    print("Shape of our converted array: ", zip_arr.shape, "\n")

    """
    code for formatting important data values that correspond to imgs
    as well as looping thru first 9 rows and wrapping them into one grid
    """
    # define num of pixels
    pixels = 16
    index_vec = np.arange(pixels)
    # index of our images; arbitrary example to plot one of them
    img_index = 0
    zip_arr[img_index,:]
    
    for img_index in range(0,9):

        img_df = pd.DataFrame({
            "col":np.tile(index_vec, pixels),
            "row":-np.repeat(index_vec, pixels),
            "intensity":zip_arr[img_index,:]
        })
        pd.concat([img_df])
    # print table of our values col, row, intensity
    print(img_df)
    
    """
    display plot using plotnine
    """
    gg = p9.ggplot()+p9.ggtitle("index")+p9.geom_raster(
        p9.aes(
            # assign vals to our img properties
            x = "col",
            y = "row",
            fill = "intensity",),
        data = img_df)
    #p9.ggtitle = "digits.png"
    # display plots 0-9
        
    #print("Displaying our plots: ")
    print(gg)



if __name__ == '__main__':
    # run main
    main()


