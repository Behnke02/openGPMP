/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1+fortran
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

// source: nt/nt.i

package nt

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stddef.h>
#include <stdint.h>


typedef ptrdiff_t intgo;
typedef size_t uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef long long swig_type_1;
typedef long long swig_type_2;
typedef long long swig_type_3;
typedef long long swig_type_4;
typedef long long swig_type_5;
typedef long long swig_type_6;
typedef long long swig_type_7;
typedef long long swig_type_8;
typedef long long swig_type_9;
typedef long long swig_type_10;
typedef long long swig_type_11;
typedef long long swig_type_12;
typedef long long swig_type_13;
typedef long long swig_type_14;
typedef long long swig_type_15;
typedef long long swig_type_16;
typedef long long swig_type_17;
typedef long long swig_type_18;
typedef long long swig_type_19;
typedef long long swig_type_20;
typedef long long swig_type_21;
typedef long long swig_type_22;
typedef long long swig_type_23;
typedef long long swig_type_24;
typedef long long swig_type_25;
typedef long long swig_type_26;
typedef long long swig_type_27;
typedef long long swig_type_28;
typedef long long swig_type_29;
typedef _gostring_ swig_type_30;
typedef _gostring_ swig_type_31;
typedef _gostring_ swig_type_32;
typedef _gostring_ swig_type_33;
typedef _gostring_ swig_type_34;
typedef _gostring_ swig_type_35;
typedef _gostring_ swig_type_36;
typedef _gostring_ swig_type_37;
typedef long long swig_type_38;
typedef _gostring_ swig_type_39;
typedef _gostring_ swig_type_40;
typedef _gostring_ swig_type_41;
typedef _gostring_ swig_type_42;
typedef _gostring_ swig_type_43;
extern void _wrap_Swig_free_nt_cb8adad0aa104e0b(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_nt_cb8adad0aa104e0b(swig_intgo arg1);
extern swig_type_1 _wrap_Basics_greatest_power_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_2 arg2, swig_type_3 arg3);
extern swig_type_4 _wrap_Basics_op_gcd_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_5 arg2, swig_type_6 arg3);
extern uintptr_t _wrap_new_Basics_nt_cb8adad0aa104e0b(void);
extern void _wrap_delete_Basics_nt_cb8adad0aa104e0b(uintptr_t arg1);
extern _Bool _wrap_Primality_is_prime_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_7 arg2);
extern _Bool _wrap_Primality_compute_miller_rabin_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_8 arg2, swig_type_9 arg3);
extern _Bool _wrap_Primality_miller_rabin_prime_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_10 arg2, swig_type_11 arg3);
extern void _wrap_Primality_miller_rabin_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_12 arg2, swig_type_13 arg3, swig_type_14 arg4);
extern swig_type_15 _wrap_Primality_jacobian_number_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_16 arg2, swig_type_17 arg3);
extern _Bool _wrap_Primality_solovoy_strassen_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_18 arg2, swig_type_19 arg3);
extern swig_type_20 _wrap_Primality_mod_pow_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_21 arg2, swig_type_22 arg3, swig_type_23 arg4);
extern _Bool _wrap_Primality_carmichael_num_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_24 arg2);
extern void _wrap_Primality_sieve_of_eratosthenes_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_25 arg2);
extern swig_type_26 _wrap_Primality_pollard_rho_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_27 arg2);
extern swig_type_28 _wrap_Primality_ETF_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_29 arg2);
extern uintptr_t _wrap_new_Primality_nt_cb8adad0aa104e0b(void);
extern void _wrap_delete_Primality_nt_cb8adad0aa104e0b(uintptr_t arg1);
extern void _wrap_RC4_byte_swap_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3);
extern void _wrap_RC4_trad_swap_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3);
extern void _wrap_RC4_XOR_swap_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3);
extern void _wrap_RC4_KSA_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_30 arg2, swig_voidp arg3, swig_intgo arg4);
extern void _wrap_RC4_PRGA_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_voidp arg2, swig_type_31 arg3, swig_voidp arg4, swig_intgo arg5);
extern swig_type_32 _wrap_RC4_store_hash_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_33 arg2, swig_voidp arg3, swig_intgo arg4);
extern swig_voidp _wrap_RC4_compute_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_34 arg2, swig_type_35 arg3, swig_voidp arg4, swig_intgo arg5);
extern uintptr_t _wrap_new_RC4_nt_cb8adad0aa104e0b(void);
extern void _wrap_delete_RC4_nt_cb8adad0aa104e0b(uintptr_t arg1);
extern swig_type_36 _wrap_Cipher_caesar_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_37 arg2, swig_type_38 arg3);
extern swig_type_39 _wrap_Cipher_keyword_encode_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_40 arg2);
extern swig_type_41 _wrap_Cipher_keyword_nt_cb8adad0aa104e0b(uintptr_t arg1, swig_type_42 arg2, swig_type_43 arg3);
extern uintptr_t _wrap_new_Cipher_nt_cb8adad0aa104e0b(void);
extern void _wrap_delete_Cipher_nt_cb8adad0aa104e0b(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


func getSwigcptr(v interface { Swigcptr() uintptr }) uintptr {
	if v == nil {
		return 0
	}
	return v.Swigcptr()
}


type _ sync.Mutex


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_nt_cb8adad0aa104e0b(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrBasics uintptr

func (p SwigcptrBasics) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBasics) SwigIsBasics() {
}

func (arg1 SwigcptrBasics) Greatest_power(arg2 int64, arg3 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_Basics_greatest_power_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_type_2(_swig_i_1), C.swig_type_3(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrBasics) Op_gcd(arg2 int64, arg3 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_Basics_op_gcd_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_type_5(_swig_i_1), C.swig_type_6(_swig_i_2)))
	return swig_r
}

func NewBasics() (_swig_ret Basics) {
	var swig_r Basics
	swig_r = (Basics)(SwigcptrBasics(C._wrap_new_Basics_nt_cb8adad0aa104e0b()))
	return swig_r
}

func DeleteBasics(arg1 Basics) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Basics_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0))
}

type Basics interface {
	Swigcptr() uintptr
	SwigIsBasics()
	Greatest_power(arg2 int64, arg3 int64) (_swig_ret int64)
	Op_gcd(arg2 int64, arg3 int64) (_swig_ret int64)
}

type SwigcptrPrimality uintptr

func (p SwigcptrPrimality) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPrimality) SwigIsPrimality() {
}

func (arg1 SwigcptrPrimality) Is_prime(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Primality_is_prime_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_type_7(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrPrimality) Compute_miller_rabin(arg2 int64, arg3 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_Primality_compute_miller_rabin_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_type_8(_swig_i_1), C.swig_type_9(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPrimality) Miller_rabin_prime(arg2 int64, arg3 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_Primality_miller_rabin_prime_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_type_10(_swig_i_1), C.swig_type_11(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPrimality) Miller_rabin(arg2 int64, arg3 int64, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Primality_miller_rabin_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_type_12(_swig_i_1), C.swig_type_13(_swig_i_2), C.swig_type_14(_swig_i_3))
}

func (arg1 SwigcptrPrimality) Jacobian_number(arg2 int64, arg3 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (int64)(C._wrap_Primality_jacobian_number_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_type_16(_swig_i_1), C.swig_type_17(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPrimality) Solovoy_strassen(arg2 int64, arg3 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (bool)(C._wrap_Primality_solovoy_strassen_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_type_18(_swig_i_1), C.swig_type_19(_swig_i_2)))
	return swig_r
}

func (arg1 SwigcptrPrimality) Mod_pow(arg2 int64, arg3 int64, arg4 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (int64)(C._wrap_Primality_mod_pow_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_type_21(_swig_i_1), C.swig_type_22(_swig_i_2), C.swig_type_23(_swig_i_3)))
	return swig_r
}

func (arg1 SwigcptrPrimality) Carmichael_num(arg2 int64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Primality_carmichael_num_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_type_24(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrPrimality) Sieve_of_eratosthenes(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Primality_sieve_of_eratosthenes_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_type_25(_swig_i_1))
}

func (arg1 SwigcptrPrimality) Pollard_rho(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_Primality_pollard_rho_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_type_27(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrPrimality) ETF(arg2 uint64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_Primality_ETF_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_type_29(_swig_i_1)))
	return swig_r
}

func NewPrimality() (_swig_ret Primality) {
	var swig_r Primality
	swig_r = (Primality)(SwigcptrPrimality(C._wrap_new_Primality_nt_cb8adad0aa104e0b()))
	return swig_r
}

func DeletePrimality(arg1 Primality) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Primality_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0))
}

type Primality interface {
	Swigcptr() uintptr
	SwigIsPrimality()
	Is_prime(arg2 int64) (_swig_ret bool)
	Compute_miller_rabin(arg2 int64, arg3 int64) (_swig_ret bool)
	Miller_rabin_prime(arg2 int64, arg3 int64) (_swig_ret bool)
	Miller_rabin(arg2 int64, arg3 int64, arg4 int64)
	Jacobian_number(arg2 int64, arg3 int64) (_swig_ret int64)
	Solovoy_strassen(arg2 int64, arg3 int64) (_swig_ret bool)
	Mod_pow(arg2 int64, arg3 int64, arg4 int64) (_swig_ret int64)
	Carmichael_num(arg2 int64) (_swig_ret bool)
	Sieve_of_eratosthenes(arg2 int64)
	Pollard_rho(arg2 int64) (_swig_ret int64)
	ETF(arg2 uint64) (_swig_ret int64)
}

const BITS int = 255
const BYTE_LIMIT int = 256
type SwigcptrRC4 uintptr

func (p SwigcptrRC4) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRC4) SwigIsRC4() {
}

func (arg1 SwigcptrRC4) Byte_swap(arg2 *byte, arg3 *byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RC4_byte_swap_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2))
}

func (arg1 SwigcptrRC4) Trad_swap(arg2 *byte, arg3 *byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RC4_trad_swap_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2))
}

func (arg1 SwigcptrRC4) XOR_swap(arg2 *byte, arg3 *byte) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_RC4_XOR_swap_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2))
}

func (arg1 SwigcptrRC4) KSA(arg2 string, arg3 *byte, arg4 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_RC4_KSA_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), *(*C.swig_type_30)(unsafe.Pointer(&_swig_i_1)), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRC4) PRGA(arg2 *byte, arg3 string, arg4 *byte, arg5 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	C._wrap_RC4_PRGA_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), *(*C.swig_type_31)(unsafe.Pointer(&_swig_i_2)), C.swig_voidp(_swig_i_3), C.swig_intgo(_swig_i_4))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrRC4) Store_hash(arg2 string, arg3 *byte, arg4 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r_p := C._wrap_RC4_store_hash_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), *(*C.swig_type_33)(unsafe.Pointer(&_swig_i_1)), C.swig_voidp(_swig_i_2), C.swig_intgo(_swig_i_3))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRC4) Compute(arg2 string, arg3 string, arg4 *byte, arg5 int) (_swig_ret *byte) {
	var swig_r *byte
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (*byte)(C._wrap_RC4_compute_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), *(*C.swig_type_34)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_35)(unsafe.Pointer(&_swig_i_2)), C.swig_voidp(_swig_i_3), C.swig_intgo(_swig_i_4)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func NewRC4() (_swig_ret RC4) {
	var swig_r RC4
	swig_r = (RC4)(SwigcptrRC4(C._wrap_new_RC4_nt_cb8adad0aa104e0b()))
	return swig_r
}

func DeleteRC4(arg1 RC4) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RC4_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0))
}

type RC4 interface {
	Swigcptr() uintptr
	SwigIsRC4()
	Byte_swap(arg2 *byte, arg3 *byte)
	Trad_swap(arg2 *byte, arg3 *byte)
	XOR_swap(arg2 *byte, arg3 *byte)
	KSA(arg2 string, arg3 *byte, arg4 int)
	PRGA(arg2 *byte, arg3 string, arg4 *byte, arg5 int)
	Store_hash(arg2 string, arg3 *byte, arg4 int) (_swig_ret string)
	Compute(arg2 string, arg3 string, arg4 *byte, arg5 int) (_swig_ret *byte)
}

type SwigcptrCipher uintptr

func (p SwigcptrCipher) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrCipher) SwigIsCipher() {
}

func (arg1 SwigcptrCipher) Caesar(arg2 string, arg3 int64) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_Cipher_caesar_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), *(*C.swig_type_37)(unsafe.Pointer(&_swig_i_1)), C.swig_type_38(_swig_i_2))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrCipher) Keyword_encode(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_Cipher_keyword_encode_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), *(*C.swig_type_40)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrCipher) Keyword(arg2 string, arg3 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_Cipher_keyword_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0), *(*C.swig_type_42)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_43)(unsafe.Pointer(&_swig_i_2)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func NewCipher() (_swig_ret Cipher) {
	var swig_r Cipher
	swig_r = (Cipher)(SwigcptrCipher(C._wrap_new_Cipher_nt_cb8adad0aa104e0b()))
	return swig_r
}

func DeleteCipher(arg1 Cipher) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Cipher_nt_cb8adad0aa104e0b(C.uintptr_t(_swig_i_0))
}

type Cipher interface {
	Swigcptr() uintptr
	SwigIsCipher()
	Caesar(arg2 string, arg3 int64) (_swig_ret string)
	Keyword_encode(arg2 string) (_swig_ret string)
	Keyword(arg2 string, arg3 string) (_swig_ret string)
}


